<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	    xmlns:s='clr-namespace:System;assembly=mscorlib' 
	    xmlns:l='clr-namespace:AvalonEdit.Editor' 
		x:Class="AvalonEdit.Editor.TreeViewer"
        Background="AliceBlue">

<UserControl.Resources>
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <!--
        <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable"
              Value="False"/>
            <Setter Property="Width"
              Value="19"/>
            <Setter Property="Height"
              Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="19"
                    Height="13"
                    Background="Transparent">
                            <Border Width="9"
                      Height="9"
                      BorderThickness="1"
                      BorderBrush="#FF7898B5"
                      CornerRadius="1"
                      SnapsToDevicePixels="true">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0"
                                       EndPoint="1,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="White"
                                    Offset=".2"/>
                                            <GradientStop Color="#FFC0B7A6"
                                    Offset="1"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path x:Name="ExpandPath"
                      Margin="1,1,1,1"
                      Fill="Black"
                      Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                       Value="True">
                                <Setter Property="Data"
                        TargetName="ExpandPath"
                        Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
-->
        <Style x:Key="ExpandCollapseToggleStyle"
       TargetType="ToggleButton">
            <Setter Property="Focusable"
          Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15"
              Height="13"
              Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Collapsed">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Expanded">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Collapsed"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Margin="1,1,1,1"
                Data="M 4 0 L 8 4 L 4 8 Z">
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="Expanded"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Margin="1,1,1,1"
                Data="M 0 4 L 8 4 L 4 8 Z"
                Visibility="Hidden">
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0"
                     StrokeThickness="5"
                     Stroke="Black"
                     StrokeDashArray="1 2"
                     Opacity="0" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type TreeViewItem}"
       TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background"
          Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
          Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
          Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding"
          Value="1,0,0,0" />
            <Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource TreeViewItemFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19"
                              Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                Storyboard.TargetProperty="(Panel.Background).SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="SelectedInactive">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ItemsHost">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="Expander"
                        Style="{StaticResource ExpandCollapseToggleStyle}"
                        ClickMode="Press"
                        IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Bd"
                  Grid.Column="1"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header"
                              ContentSource="Header"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                          Grid.Row="1"
                          Grid.Column="1"
                          Grid.ColumnSpan="2"
                          Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                   Value="false">
                                <Setter TargetName="Expander"
                    Property="Visibility"
                    Value="Hidden" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                         Value="false" />
                                    <Condition Property="Width"
                         Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                    Property="MinWidth"
                    Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                         Value="false" />
                                    <Condition Property="Height"
                         Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                    Property="MinHeight"
                    Value="19" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <l:LevelToIndentConverter x:Key="LevelToIndentConverter"/>


    <DataTemplate x:Key="CellTemplate_Name">
      <DockPanel>
                
                <ToggleButton x:Name="Expander" 
                        Style="{StaticResource ExpandCollapseToggleStyle}"
                      Margin="{Binding Level,Converter={StaticResource LevelToIndentConverter},RelativeSource={RelativeSource AncestorType={x:Type l:TreeListViewItem}}}"
                      IsChecked="{Binding Path=Expanded,RelativeSource={RelativeSource AncestorType={x:Type l:TreeListViewItem}}}"
                      ClickMode="Press" Click="Expander_Click"/> 
                <!-- Connecting Lines -->
                
                <!-- Vertical line -->
                <Rectangle x:Name="VerLn" Width="6" Stroke="#DCDCDC" Margin="-15,0,1,0" Grid.RowSpan="1" SnapsToDevicePixels="true" Fill="LightGray" Visibility="Hidden"/>
                <l:RichTextBlock x:Name="ItemText" FontWeight="Bold" 
                Text="{Binding Name}" Data="{Binding Words, NotifyOnTargetUpdated=True}"
      ></l:RichTextBlock >

            </DockPanel>
      <DataTemplate.Triggers>
        <DataTrigger Binding="{Binding Path=HasItems,RelativeSource={RelativeSource AncestorType={x:Type l:TreeListViewItem}}}" 
                     Value="False">
          <Setter TargetName="Expander"
                  Property="Visibility"
                  Value="Hidden"/>
                    <Setter TargetName="VerLn"
                  Property="Visibility"
                  Value="Visible"/>
                    <Setter TargetName="VerLn"
                  Property="Visibility"
                  Value="Visible"/>
                    <Setter TargetName="ItemText"
                  Property="Foreground"
                  Value="Blue"/>
                    <Setter TargetName="ItemText"
                  Property="FontWeight"
                  Value="Normal"/>
                </DataTrigger>
      </DataTemplate.Triggers>
        
    </DataTemplate>

    <Style TargetType="{x:Type l:TreeListViewItem}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type l:TreeListViewItem}">
            <StackPanel>
              <Border Name="Bd"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}">
                <GridViewRowPresenter x:Name="PART_Header" 
                                      Content="{TemplateBinding Header}" 
                                      Columns="{Binding Path=Columns,RelativeSource={RelativeSource AncestorType={x:Type l:TreeListView}}}" />
              </Border>
              <ItemsPresenter x:Name="ItemsHost" />
            </StackPanel>
            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded"
                       Value="false">
                <Setter TargetName="ItemsHost"
                        Property="Visibility"
                        Value="Collapsed"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="HasHeader"
                             Value="false"/>
                  <Condition Property="Width"
                             Value="Auto"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header"
                        Property="MinWidth"
                        Value="75"/>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="HasHeader"
                             Value="false"/>
                  <Condition Property="Height"
                             Value="Auto"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header"
                        Property="MinHeight"
                        Value="19"/>
              </MultiTrigger>
              <Trigger Property="IsSelected"
                       Value="true">
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected"
                             Value="true"/>
                  <Condition Property="IsSelectionActive"
                             Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
              </MultiTrigger>
              <Trigger Property="IsEnabled"
                       Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <Style TargetType="{x:Type l:TreeListView}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type l:TreeListView}">
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <DockPanel>
                <GridViewHeaderRowPresenter Columns="{Binding Path=Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                            DockPanel.Dock="Top"/>
                <ItemsPresenter/>
              </DockPanel>
            </Border>
                        
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
       
    </UserControl.Resources>
   
    <DockPanel >
        <StackPanel DockPanel.Dock="Top" VerticalAlignment="Stretch" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,0" Width="6320" Height="20"  Background="Lavender">
            <ComboBox IsReadOnly="True" IsEditable="True" SelectedIndex="0" Background="White" Width="160">
                <ComboBoxItem Background="White">Entire Solution</ComboBoxItem>
                <ComboBoxItem Background="White">Current Project</ComboBoxItem>
                <ComboBoxItem Background="White">Current Document</ComboBoxItem>
                <ComboBoxItem Background="White">Open Documents</ComboBoxItem>
                <ComboBoxItem Background="White">Changed Documents</ComboBoxItem>
            </ComboBox>
            <Rectangle VerticalAlignment="Stretch" Width="1" Margin="2,0,2,0" Stroke="Gray" />
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" VerticalAlignment="Stretch" x:Name="ButtonCopy">
                    <Image.ToolTip>
                        <ToolTip Content="Copy (Ctrl+C)" />
                    </Image.ToolTip>
                </Image>
            </StackPanel>
        <Rectangle VerticalAlignment="Stretch" Width="1" Margin="2,0,2,0" Stroke="Gray" />
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" VerticalAlignment="Stretch" x:Name="ButtonPrevList">
                    <Image.ToolTip>
                        <ToolTip Content="Go to the previous location in the list (Shift+F8)" />
                    </Image.ToolTip>
                </Image>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" VerticalAlignment="Stretch" x:Name="ButtonNextList">
                    <Image.ToolTip>
                        <ToolTip Content="Go to the next location in the list (F8)" />
                    </Image.ToolTip>
                </Image>
            </StackPanel>

            <Rectangle VerticalAlignment="Stretch" Width="1" Margin="2,0,2,0" Stroke="Gray" />
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" x:Name="ButtonFilterClear">
                    <Image.ToolTip>
                        <ToolTip Content="Clear All Filters" />
                    </Image.ToolTip>
                </Image>
            </StackPanel>
            <ComboBox IsReadOnly="True" IsEditable="True" SelectedIndex="0" Width="160">
                <ComboBoxItem>Project</ComboBoxItem>
                <ComboBoxItem>Project then Definition</ComboBoxItem>
                <ComboBoxItem>Definition only</ComboBoxItem>
                <ComboBoxItem>Definition then Project</ComboBoxItem>
                <ComboBoxItem>Definition then Path</ComboBoxItem>
                <ComboBoxItem>No Grouping</ComboBoxItem>
                <ComboBox.ToolTip>
                    <ToolTip Content="Group by"/>
                </ComboBox.ToolTip>
            </ComboBox>
            <Rectangle VerticalAlignment="Stretch" Width="1" Margin="2,0,2,0" Stroke="Black" />
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" x:Name="ButtonKeepResults" />
                <TextBlock Width="80" VerticalAlignment="Center" Text="Keep Results"/>
                <StackPanel.ToolTip>
                    <ToolTip Content="Keep Results"/>
                </StackPanel.ToolTip>
            </StackPanel>
        </StackPanel>
        <ScrollViewer Name="scroll1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <l:TreeListView x:Name="treeListView" Background="AliceBlue" Margin="0,0,0,0" ItemsSource="{x:Static l:TreeViewer.Sources}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch">
                <l:TreeListView.Columns>
                    <GridViewColumn Header="Code" CellTemplate="{StaticResource CellTemplate_Name}" />
                    <GridViewColumn Header="File" DisplayMemberBinding="{Binding File}" Width="60" />
                    <GridViewColumn Header="Line" DisplayMemberBinding="{Binding Line}" />
                    <GridViewColumn Header="Col" DisplayMemberBinding="{Binding Column}" />
                    <GridViewColumn Header="Project" DisplayMemberBinding="{Binding Project}" />

                </l:TreeListView.Columns>

                <!--<l:TreeListView.ItemTemplate>
                <HierarchicalDataTemplate  DataType="{x:Type l:Source}" ItemsSource="{Binding Path=Data}">

                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <TextBlock> <Run Text="{Binding Path=Name}"/><Run Text="test"/></TextBlock>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
                </l:TreeListView.ItemTemplate>-->
                <l:TreeListView.Resources>
                <HierarchicalDataTemplate  DataType="{x:Type l:Source}" ItemsSource="{Binding Path=Data}">
                            <TextBlock> <Run Text="{Binding Path=Name}"/><Run Text="test"/></TextBlock>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate  DataType="{x:Type l:SourceData}" ItemsSource="{Binding Path=Data}">
                                <TextBlock> <Run Text="{Binding Path=Name}"/><Run Text="test"/></TextBlock>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate  DataType="{x:Type l:SourceRefData}" ItemsSource="{Binding Path=Data}">
                        <TextBlock> <Run Text="{Binding Path=Name}"/><Run Text="test"/></TextBlock>
                </HierarchicalDataTemplate>
                </l:TreeListView.Resources>
            </l:TreeListView>
        </ScrollViewer>
    </DockPanel>
</UserControl>

