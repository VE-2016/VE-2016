<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	    xmlns:s='clr-namespace:System;assembly=mscorlib' 
	    xmlns:l='clr-namespace:AvalonEdit.Editor' 
		x:Class="AvalonEdit.Editor.TreeViewer"
        Background="AliceBlue">

<UserControl.Resources>

    <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
      <Setter Property="Focusable"
              Value="False"/>
      <Setter Property="Width"
              Value="19"/>
      <Setter Property="Height"
              Value="13"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border Width="19"
                    Height="13"
                    Background="Transparent">
              <Border Width="9"
                      Height="9"
                      BorderThickness="1"
                      BorderBrush="#FF7898B5"
                      CornerRadius="1"
                      SnapsToDevicePixels="true">
                <Border.Background>
                  <LinearGradientBrush StartPoint="0,0"
                                       EndPoint="1,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="White"
                                    Offset=".2"/>
                      <GradientStop Color="#FFC0B7A6"
                                    Offset="1"/>
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Border.Background>
                <Path x:Name="ExpandPath"
                      Margin="1,1,1,1"
                      Fill="Black"
                      Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
              </Border>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsChecked"
                       Value="True">
                <Setter Property="Data"
                        TargetName="ExpandPath"
                        Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <l:LevelToIndentConverter x:Key="LevelToIndentConverter"/>


    <DataTemplate x:Key="CellTemplate_Name">
      <DockPanel>
                
                <ToggleButton x:Name="Expander" 
                       Style="{StaticResource ExpandCollapseToggleStyle}"
                      Margin="{Binding Level,Converter={StaticResource LevelToIndentConverter},RelativeSource={RelativeSource AncestorType={x:Type l:TreeListViewItem}}}"
                      IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource AncestorType={x:Type l:TreeListViewItem}}}"
                      ClickMode="Press"/>
                <!-- Connecting Lines -->
                
                <!-- Vertical line -->
                <Rectangle x:Name="VerLn" Width="6" Stroke="#DCDCDC" Margin="-15,0,1,0" Grid.RowSpan="1" SnapsToDevicePixels="true" Fill="LightGray" Visibility="Hidden"/>
                <l:RichTextBlock x:Name="ItemText" FontWeight="Bold"
                Text="{Binding Name}"></l:RichTextBlock>

            </DockPanel>
      <DataTemplate.Triggers>
        <DataTrigger Binding="{Binding Path=HasItems,RelativeSource={RelativeSource AncestorType={x:Type l:TreeListViewItem}}}" 
                     Value="False">
          <Setter TargetName="Expander"
                  Property="Visibility"
                  Value="Hidden"/>
                    <Setter TargetName="VerLn"
                  Property="Visibility"
                  Value="Visible"/>
                    <Setter TargetName="VerLn"
                  Property="Visibility"
                  Value="Visible"/>
                    <Setter TargetName="ItemText"
                  Property="Foreground"
                  Value="Blue"/>
                    <Setter TargetName="ItemText"
                  Property="FontWeight"
                  Value="Normal"/>
                </DataTrigger>
      </DataTemplate.Triggers>
        
    </DataTemplate>

    <Style TargetType="{x:Type l:TreeListViewItem}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type l:TreeListViewItem}">
            <StackPanel>
              <Border Name="Bd"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}">
                <GridViewRowPresenter x:Name="PART_Header" 
                                      Content="{TemplateBinding Header}" 
                                      Columns="{Binding Path=Columns,RelativeSource={RelativeSource AncestorType={x:Type l:TreeListView}}}" />
              </Border>
              <ItemsPresenter x:Name="ItemsHost" />
            </StackPanel>
            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded"
                       Value="false">
                <Setter TargetName="ItemsHost"
                        Property="Visibility"
                        Value="Collapsed"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="HasHeader"
                             Value="false"/>
                  <Condition Property="Width"
                             Value="Auto"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header"
                        Property="MinWidth"
                        Value="75"/>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="HasHeader"
                             Value="false"/>
                  <Condition Property="Height"
                             Value="Auto"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header"
                        Property="MinHeight"
                        Value="19"/>
              </MultiTrigger>
              <Trigger Property="IsSelected"
                       Value="true">
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected"
                             Value="true"/>
                  <Condition Property="IsSelectionActive"
                             Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
              </MultiTrigger>
              <Trigger Property="IsEnabled"
                       Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <Style TargetType="{x:Type l:TreeListView}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type l:TreeListView}">
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <DockPanel>
                <GridViewHeaderRowPresenter Columns="{Binding Path=Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                            DockPanel.Dock="Top"/>
                <ItemsPresenter/>
              </DockPanel>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </UserControl.Resources>
   
    <DockPanel >
        <StackPanel DockPanel.Dock="Top" VerticalAlignment="Stretch" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,0" Width="6320" Height="20"  Background="Lavender">
            <ComboBox IsReadOnly="True" IsEditable="True" SelectedIndex="0" Background="White" Width="160">
                <ComboBoxItem Background="White">Entire Solution</ComboBoxItem>
                <ComboBoxItem Background="White">Current Project</ComboBoxItem>
                <ComboBoxItem Background="White">Current Document</ComboBoxItem>
                <ComboBoxItem Background="White">Open Documents</ComboBoxItem>
                <ComboBoxItem Background="White">Changed Documents</ComboBoxItem>
            </ComboBox>
            <Rectangle VerticalAlignment="Stretch" Width="1" Margin="2,0,2,0" Stroke="Gray" />
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" VerticalAlignment="Stretch" x:Name="ButtonCopy">
                    <Image.ToolTip>
                        <ToolTip Content="Copy (Ctrl+C)" />
                    </Image.ToolTip>
                </Image>
            </StackPanel>
        <Rectangle VerticalAlignment="Stretch" Width="1" Margin="2,0,2,0" Stroke="Gray" />
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" VerticalAlignment="Stretch" x:Name="ButtonPrevList">
                    <Image.ToolTip>
                        <ToolTip Content="Go to the previous location in the list (Shift+F8)" />
                    </Image.ToolTip>
                </Image>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" VerticalAlignment="Stretch" x:Name="ButtonNextList">
                    <Image.ToolTip>
                        <ToolTip Content="Go to the next location in the list (F8)" />
                    </Image.ToolTip>
                </Image>
            </StackPanel>

            <Rectangle VerticalAlignment="Stretch" Width="1" Margin="2,0,2,0" Stroke="Gray" />
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" x:Name="ButtonFilterClear">
                    <Image.ToolTip>
                        <ToolTip Content="Clear All Filters" />
                    </Image.ToolTip>
                </Image>
            </StackPanel>
            <ComboBox IsReadOnly="True" IsEditable="True" SelectedIndex="0" Width="160">
                <ComboBoxItem>Project</ComboBoxItem>
                <ComboBoxItem>Project then Definition</ComboBoxItem>
                <ComboBoxItem>Definition only</ComboBoxItem>
                <ComboBoxItem>Definition then Project</ComboBoxItem>
                <ComboBoxItem>Definition then Path</ComboBoxItem>
                <ComboBoxItem>No Grouping</ComboBoxItem>
                <ComboBox.ToolTip>
                    <ToolTip Content="Group by"/>
                </ComboBox.ToolTip>
            </ComboBox>
            <Rectangle VerticalAlignment="Stretch" Width="1" Margin="2,0,2,0" Stroke="Black" />
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" x:Name="ButtonKeepResults" />
                <TextBlock Width="80" VerticalAlignment="Center" Text="Keep Results"/>
                <StackPanel.ToolTip>
                    <ToolTip Content="Keep Results"/>
                </StackPanel.ToolTip>
            </StackPanel>
        </StackPanel>
        <l:TreeListView x:Name="treeListView" Background="AliceBlue" Margin="0,0,0,0" ItemsSource="{x:Static l:TreeViewer.Sources}" >
    <l:TreeListView.Columns>
      <GridViewColumn Header="Code" CellTemplate="{StaticResource CellTemplate_Name}" />
      <GridViewColumn Header="File" DisplayMemberBinding="{Binding File}" Width="60" />
      <GridViewColumn Header="Line" DisplayMemberBinding="{Binding Line}" />
            <GridViewColumn Header="Col" DisplayMemberBinding="{Binding Column}" />
            <GridViewColumn Header="Project" DisplayMemberBinding="{Binding Project}" />
            
        </l:TreeListView.Columns>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Path=Data}">

                    <!-- Display the AnimalCategory by showing it's Category string -->
                    <TextBlock FontWeight="Bold" Text="{Binding Path=Category}" />

                    <!-- Specify the nested template for the individual Animal items
             that are within the AnimalCategories.  E.g. “California Newt”, etc. -->
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <TextBlock> <Run Text="{Binding Path=Name}"/><Run Text="test"/></TextBlock>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>

                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>


        </l:TreeListView>
    </DockPanel>
</UserControl>

